{"version":3,"file":"index.d5110c7a.js","sources":["../../vite/modulepreload-polyfill","../../src/js/selectors.js","../../src/js/functions.js","../../src/js/main.js"],"sourcesContent":["__VITE_IS_MODERN__&&(function polyfill() {\n    const relList = document.createElement('link').relList;\n    if (relList && relList.supports && relList.supports('modulepreload')) {\n        return;\n    }\n    for (const link of document.querySelectorAll('link[rel=\"modulepreload\"]')) {\n        processPreload(link);\n    }\n    new MutationObserver((mutations) => {\n        for (const mutation of mutations) {\n            if (mutation.type !== 'childList') {\n                continue;\n            }\n            for (const node of mutation.addedNodes) {\n                if (node.tagName === 'LINK' && node.rel === 'modulepreload')\n                    processPreload(node);\n            }\n        }\n    }).observe(document, { childList: true, subtree: true });\n    function getFetchOpts(script) {\n        const fetchOpts = {};\n        if (script.integrity)\n            fetchOpts.integrity = script.integrity;\n        if (script.referrerpolicy)\n            fetchOpts.referrerPolicy = script.referrerpolicy;\n        if (script.crossorigin === 'use-credentials')\n            fetchOpts.credentials = 'include';\n        else if (script.crossorigin === 'anonymous')\n            fetchOpts.credentials = 'omit';\n        else\n            fetchOpts.credentials = 'same-origin';\n        return fetchOpts;\n    }\n    function processPreload(link) {\n        if (link.ep)\n            // ep marker = processed\n            return;\n        link.ep = true;\n        // prepopulate the load record\n        const fetchOpts = getFetchOpts(link);\n        fetch(link.href, fetchOpts);\n    }\n}());","export const selectors = {\n  $hexToRgbBtn: document.querySelector(\".hextorgb__btn\"),\n  $rgbToHexBtn: document.querySelector(\".rgbtohex__btn\"),\n  $hexToRgbCard: document.querySelector(\".hextorgb__card\"),\n  $rgbToHexCard: document.querySelector(\".rgbtohex__card\"),\n  $hexInputField: document.querySelector(\".hex__input--field\"),\n  $rgbInputField: document.querySelector(\".rgb__input--field\"),\n  $firstColorWindow: document.querySelector(\n    \".card:first-of-type .card__color--window\"\n  ),\n  $lastColorWindow: document.querySelector(\n    \".card:last-of-type .card__color--window\"\n  ),\n  $copyBtns: document.querySelectorAll(\".btn .bxs-copy\"),\n  $hexColorLabel: document.querySelector(\".hex__value span\"),\n  $rgbColorLabel: document.querySelector(\".rgb__value span\"),\n  $firstHslColorLabel: document.querySelector(\n    \".hextorgb__card .hsl__value span\"\n  ),\n  $lastHslColorLabel: document.querySelector(\".rgbtohex__card .hsl__value span\")\n};\n","/**\n * Converts HEX color value to RGB\n * returns an array of red, green & blue\n *\n * @param  {string} hex - Hex color value\n * @return {Array}      - red,green & blue values\n */\nexport const hexToRgb = hex => {\n  if (hex.length === 4) {\n    return hex\n      .slice(1)\n      .split(\"\")\n      .map(e => parseInt(e, 16));\n  } else if (hex.length === 7) {\n    return hex\n      .slice(1)\n      .match(/[\\da-f]{2}/gi)\n      .map(e => parseInt(e, 16));\n  }\n};\n\n/**\n * Convert RGB color value to HEX\n * returns a string of hex color value\n *\n * @param  {Array} [r,g,b] - red, green & blue values\n * @return {string}        - Hex color value\n */\nexport const rgbToHex = rgb => {\n  const rgbValues = rgb\n    .slice(4)\n    .slice(0, -1)\n    .trim()\n    .split(/,\\s{0,}/)\n    .filter(e => e <= 255);\n\n  return rgbValues.length === 3\n    ? `#${rgbValues\n        .map(e =>\n          (+e).toString(16).length < 2\n            ? `0${(+e).toString(16)}`\n            : (+e).toString(16)\n        )\n        .join(\"\")}`\n    : null;\n};\n\n/**\n * Converts RGB color value into HSL.\n * returns an array containing hue,saturation & lightness\n *\n * @param  {Array} [r,g,b] - red, green & blue values\n * @return {Array}         - hue, stauration & lightness values\n */\nexport const rgbToHsl = (...rgbArr) => {\n  let h, s;\n\n  // Calculate fraction of r,g,b\n  const rgb = rgbArr.map(val => val / 255);\n  const [r, g, b] = rgb;\n\n  // Calculate lightness\n  const [min, max] = [Math.min(...rgb), Math.max(...rgb)];\n  const l = (min + max) / 2;\n\n  // Calculate hue & saturation\n  const delta = max - min;\n  if (delta === 0) h = s = 0;\n  else {\n    s = l > 0.5 ? delta / (2 - l * 2) : delta / (l * 2);\n\n    switch (max) {\n      case r:\n        h = (g - b) / delta + (g < b ? 6 : 0);\n        break;\n      case g:\n        h = (b - r) / delta + 2;\n        break;\n      case b:\n        h = (r - g) / delta + 4;\n        break;\n    }\n    h = Math.round(h * 60);\n  }\n\n  return [h, +(s * 100).toFixed(0), +(l * 100).toFixed(0)];\n};\n\n/**\n * TODO: Function for conversion of HSL color value to RGB\n */\n","import \"../scss/main.scss\";\nimport { selectors as sel } from \"./selectors\";\nimport { rgbToHex, hexToRgb, rgbToHsl } from \"./functions\";\n\nconst [hexRegex, rgbRegex] = [\n  /^#([\\da-f]{3}|[\\da-f]{6})$/i,\n  /^(rgb)\\(\\s{0,}(\\d{1,3}\\s{0,},\\s{0,}){2}\\d{1,3}\\s{0,}\\)$/i\n];\n\n/* ----------- Event handler for card switch buttons -----------*/\nsel.$hexToRgbBtn.addEventListener(\"click\", function () {\n  // Toggle class in buttons\n  if (!this.classList.contains(\"btn__active\"))\n    this.classList.add(\"btn__active\");\n  sel.$rgbToHexBtn.classList.remove(\"btn__active\");\n\n  // Toggle class in cards\n  if (!sel.$hexToRgbCard.matches(\".card-visible\"))\n    sel.$hexToRgbCard.classList.add(\"card-visible\");\n  sel.$rgbToHexCard.classList.remove(\"card-visible\");\n});\n\nsel.$rgbToHexBtn.addEventListener(\"click\", function () {\n  // Toggle class in buttons\n  this.classList.toggle(\"btn__active\");\n  sel.$hexToRgbBtn.classList.toggle(\"btn__active\");\n\n  // Toggle class in cards\n  sel.$rgbToHexCard.classList.add(\"card-visible\");\n  sel.$hexToRgbCard.classList.remove(\"card-visible\");\n});\n\n/* --------------- Event handler for copy buttons --------------*/\ntry {\n  sel.$copyBtns.forEach(cpBtn => {\n    cpBtn.addEventListener(\"click\", function () {\n      navigator.clipboard\n        .writeText(this.parentElement.previousElementSibling.textContent)\n        .then(() => alert(\"color value has been copied\"));\n    });\n  });\n} catch (error) {\n  sel.$copyBtns.forEach(cpBtn => (cpBtn.style.display = \"none\"));\n}\n\n/* -------------- Event Handler for hex input field --------------*/\nsel.$hexInputField?.addEventListener(\"input\", function () {\n  if (hexRegex.test(this.value.trim())) {\n    // Calculate rgb & hsl values\n    const [r, g, b] = hexToRgb(this.value.trim());\n    const [h, s, l] = rgbToHsl(r, g, b);\n\n    // Display rgb & hex values in UI\n    const rgbColorValue = `rgb(${r}, ${g}, ${b})`;\n    sel.$rgbColorLabel.textContent = rgbColorValue;\n    sel.$firstHslColorLabel.textContent = `hsl(${h}, ${s}%, ${l}%)`;\n\n    // Display calculated color in color window\n    sel.$firstColorWindow.style.backgroundColor = rgbColorValue;\n  }\n});\n\n/* --------------- Event Handler for rgb input field ---------------*/\nsel.$rgbInputField?.addEventListener(\"input\", function () {\n  if (rgbRegex.test(this.value.trim())) {\n    // Calculate hex & hsl values\n    const hexColor = rgbToHex(this.value.trim());\n    if (hexColor) {\n      const [h, s, l] = rgbToHsl(...hexToRgb(hexColor));\n\n      // Display hex & hsl values in UI\n      sel.$hexColorLabel.textContent = hexColor;\n      sel.$lastHslColorLabel.textContent = `hsl(${h}, ${s}%, ${l}%)`;\n\n      // Display calcualted color value in color window\n      sel.$lastColorWindow.style.backgroundColor = hexColor;\n    }\n  }\n});\n"],"names":["__vite_legacy_guard","relList","link","processPreload","mutations","mutation","node","getFetchOpts","script","fetchOpts","selectors","hexToRgb","hex","rgbToHex","rgb","rgbValues","e","rgbToHsl","rgbArr","h","val","r","g","b","min","max","l","delta","hexRegex","rgbRegex","sel","cpBtn","error","_a","s","rgbColorValue","hexColor"],"mappings":"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"}